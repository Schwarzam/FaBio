version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    volumes:
      - react_build:/frontend/build
      - ./frontend:/frontend
    environment:
      - CHOKIDAR_USEPOLLING=true

  server:
    build: ./server
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server/:/usr/src/server/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=ccbsfciee
      - POSTGRES_PASSWORD=AsenhaBoa3123
      - POSTGRES_DB=postgres

  ## TODO: 
  ## [for production]
  ## follow https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
    depends_on:
      - server
      - frontend

volumes:
  postgres_data:
  react_build: